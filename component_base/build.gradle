apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //MultiDex分包方法
        multiDexEnabled true

        //Arouter路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation rootProject.ext.dependencies["appcompat_v7"]
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["runner"]
    androidTestImplementation rootProject.ext.dependencies["espresso_core"]
    api rootProject.ext.dependencies["support_annotations"]

    //MultiDex分包方法
    api rootProject.ext.dependencies["multidex"]

    //Arouter路由
    annotationProcessor rootProject.ext.dependencies["arouter_compiler"]
    api rootProject.ext.dependencies["arouter_api"]
    api rootProject.ext.dependencies["arouter_annotation"]
    //dagger    annotationProcessor代替apt
    // api rootProject.ext.dependencies["dagger"]
    //annotationProcessor rootProject.ext.dependencies["dagger-compiler"]
    // api rootProject.ext.dependencies["javax-annotation"]
    //网络
    api rootProject.ext.dependencies["retrofit2"]
    api rootProject.ext.dependencies["converter-gson"]
    api rootProject.ext.dependencies["adapter-rxjava2"]
    api rootProject.ext.dependencies["rxjava2:rxandroid"]
    api rootProject.ext.dependencies["rxjava2"]
    api rootProject.ext.dependencies["logging-interceptor"]
//    //黄油刀
    annotationProcessor rootProject.ext.dependencies["butterknife_compiler"]
    api rootProject.ext.dependencies["butterknife"]
//    //日志
//    api rootProject.ext.dependencies["logger"]
//    //仿ios进度条 已抽取到lib中
//    //api rootProject.ext.dependencies["kprogresshud"]
//    //6.0权限
//    api rootProject.ext.dependencies["permissionsdispatcher"]
//    //baseadapter
//    api rootProject.ext.dependencies["baseRecyclerViewAdapterHelper"]
//    //图片
//    api rootProject.ext.dependencies["glide"]
//    //图片选择器 导致夜神在模拟器打不开
//    api rootProject.ext.dependencies["PictureSelector"]
//    //图片缩放,View Pager中浏览库
//    api rootProject.ext.dependencies["photoview"]
//    //仿ios 的PickerView时间选择器和条件选择器
//    api rootProject.ext.dependencies["pickerView"]
//    //上拉加载
//    api rootProject.ext.dependencies["smartRefreshLayout"]
//    //没有特殊的样式需求,可不加
//    // api rootProject.ext.dependencies["SmartRefreshHeader"]
//    //eventbus 发布/订阅事件总线
//    api rootProject.ext.dependencies["eventbus"]
//    //banner轮播图
//    api rootProject.ext.dependencies["banner"]
//    //RecyclerView万能适配器
//    api rootProject.ext.dependencies["baseRecyclerViewAdapterHelper"]
//    //Android屏幕适配 ,暂时不用
//    // api rootProject.ext.dependencies["autolayout"]
//    //安卓调试神器-Stetho
//    api rootProject.ext.dependencies["stetho"]
//    api rootProject.ext.dependencies["stetho-okhttp3"]
//    //bugly sdk
//    api rootProject.ext.dependencies["tencent-bugly"]
//    //节操播放器
//    api rootProject.ext.dependencies["jiecao"]
//    //greendao3
//    api rootProject.ext.dependencies["greendao3"]
//    //二维码扫描
//    api 'cn.yipianfengye.android:zxing-library:2.2'
//    //leakcanary-android
//    debugImplementation rootProject.ext.dependencies["leakcanary-android"]
//    //release不检测
//    releaseImplementation rootProject.ext.dependencies["leakcanary-android-no-op"]
//    //沉浸式状态栏
//    api rootProject.ext.dependencies["barlibrary"]
//
//    implementation project(':component_data')
//    implementation project(':baseLib:kprogresshud')
//    compile project(path: ':baseLib:cockroach-x')

}
